

HI-TECH Software PIC PRO Macro Assembler V9.82 build 9453 
                                                                                               Mon Aug 03 09:12:34 2015

HI-TECH Software Omniscient Code Generator (PRO mode) build 9453
     1                           	processor	16F877
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,delta=2
    10                           	psect	text111,local,class=CODE,delta=2
    11                           	psect	text115,local,class=CODE,delta=2
    12                           	psect	pa_nodes,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  000A                     	;#
    15                           
    16                           	psect	config
    17  2007  1832               	dw	6194	;#
    18                           
    19                           	psect	strings
    20  0003                     __pstrings:	
    21  0003                     stringtab:	
    22                           ;	global	stringdir,stringtab,__stringbase
    23                           
    24  0003                     stringcode:	
    25                           ;	String table - string pointers are 1 byte each
    26                           
    27  0003                     stringdir:	
    28  0003  3000               	movlw	high stringdir
    29  0004  008A               	movwf	10
    30  0005  0804               	movf	4,w
    31  0006  0A84               	incf	4,f
    32  0007  0782               	addwf	2,f
    33  0008                     __stringbase:	
    34  0008  3400               	retlw	0
    35  0009                     _TABLE:	
    36  0009  34C0               	retlw	192
    37  000A  34F9               	retlw	249
    38  000B  34A4               	retlw	164
    39  000C  34B0               	retlw	176
    40  000D  3499               	retlw	153
    41  000E  3492               	retlw	146
    42  000F  3482               	retlw	130
    43  0010  34F8               	retlw	248
    44  0011  3480               	retlw	128
    45  0012  3490               	retlw	144
    46  001F                     _ADCON0	set	31
    47  0005                     _PORTA	set	5
    48  0008                     _PORTD	set	8
    49  00FA                     _GO_DONE	set	250
    50  009F                     _ADCON1	set	159
    51  009E                     _ADRESL	set	158
    52  0085                     _TRISA	set	133
    53  0088                     _TRISD	set	136
    54                           
    55                           	psect	cinit
    56  06B8                     start_initialization:	
    57  06B8                     end_of_initialization:	
    58                           ;End of C runtime variable initialization code
    59                           
    60  06B8  0183               	clrf	3
    61  06B9  120A  118A  2EBC   	ljmp	l649	;jump to C main() function
    62                           
    63                           	psect	cstackCOMMON
    64  0070                     __pcstackCOMMON:	
    65  0070                     ?_init:	
    66  0070                     ?_DELAY:	
    67                           ; 0 bytes @ 0x0
    68                           
    69  0070                     ??_DELAY:	
    70                           ; 0 bytes @ 0x0
    71                           
    72  0070                     ?_main:	
    73                           ; 0 bytes @ 0x0
    74                           
    75  0070                     ?___awmod:	
    76                           ; 0 bytes @ 0x0
    77                           
    78  0070                     DELAY@i:	
    79                           ; 2 bytes @ 0x0
    80                           
    81  0070                     ___awmod@divisor:	
    82                           ; 2 bytes @ 0x0
    83                           
    84                           
    85                           ; 2 bytes @ 0x0
    86  0070                     	ds	2
    87  0072                     ??_init:	
    88  0072                     ___awmod@dividend:	
    89                           ; 0 bytes @ 0x2
    90                           
    91                           
    92                           ; 2 bytes @ 0x2
    93  0072                     	ds	2
    94  0074                     ??___awmod:	
    95  0074                     ___awmod@counter:	
    96                           ; 0 bytes @ 0x4
    97                           
    98                           
    99                           ; 1 bytes @ 0x4
   100  0074                     	ds	1
   101  0075                     ___awmod@sign:	
   102                           
   103                           ; 1 bytes @ 0x5
   104  0075                     	ds	1
   105  0076                     ?___awdiv:	
   106  0076                     ___awdiv@divisor:	
   107                           ; 2 bytes @ 0x6
   108                           
   109                           
   110                           ; 2 bytes @ 0x6
   111  0076                     	ds	2
   112  0078                     ___awdiv@dividend:	
   113                           
   114                           ; 2 bytes @ 0x8
   115  0078                     	ds	2
   116  007A                     ??___awdiv:	
   117  007A                     ___awdiv@counter:	
   118                           ; 0 bytes @ 0xA
   119                           
   120                           
   121                           ; 1 bytes @ 0xA
   122  007A                     	ds	1
   123  007B                     ___awdiv@sign:	
   124                           
   125                           ; 1 bytes @ 0xB
   126  007B                     	ds	1
   127  007C                     ___awdiv@quotient:	
   128                           
   129                           ; 2 bytes @ 0xC
   130  007C                     	ds	2
   131  007E                     ??_display:	
   132  007E                     ??_main:	
   133                           ; 0 bytes @ 0xE
   134                           
   135                           
   136                           	psect	cstackBANK0
   137  0020                     __pcstackBANK0:	
   138                           ; 0 bytes @ 0xE
   139                           
   140  0020                     ?_display:	
   141  0020                     display@x:	
   142                           ; 0 bytes @ 0x0
   143                           
   144                           
   145                           ; 2 bytes @ 0x0
   146  0020                     	ds	2
   147  0022                     display@bai:	
   148                           
   149                           ; 2 bytes @ 0x2
   150  0022                     	ds	2
   151  0024                     display@shi:	
   152                           
   153                           ; 2 bytes @ 0x4
   154  0024                     	ds	2
   155  0026                     display@ge:	
   156                           
   157                           ; 2 bytes @ 0x6
   158  0026                     	ds	2
   159  0028                     _display$1836:	
   160                           
   161                           ; 2 bytes @ 0x8
   162  0028                     	ds	2
   163  002A                     display@temp:	
   164                           
   165                           ; 2 bytes @ 0xA
   166  002A                     	ds	2
   167  002C                     main@i:	
   168                           
   169                           ; 2 bytes @ 0xC
   170  002C                     	ds	2
   171  002E                     main@result:	
   172                           
   173                           ; 2 bytes @ 0xE
   174  002E                     	ds	2
   175                           
   176                           	psect	maintext
   177  06BC                     __pmaintext:	
   178 ;;Data sizes: Strings 0, constant 10, data 0, bss 0, persistent 0 stack 0
   179 ;;Auto spaces:   Size  Autos    Used
   180 ;; COMMON          14     14      14
   181 ;; BANK0           80     16      16
   182 ;; BANK1           80      0       0
   183 ;; BANK3           96      0       0
   184 ;; BANK2           96      0       0
   185 ;;
   186 ;; Pointer list with targets:
   187 ;; ?___awmod	int  size(1) Largest target is 0
   188 ;;
   189 ;; ?___awdiv	int  size(1) Largest target is 0
   190 ;;
   191 ;;
   192 ;; Critical Paths under _main in COMMON
   193 ;;
   194 ;;   _main->___awdiv
   195 ;;   _display->___awdiv
   196 ;;   _init->_DELAY
   197 ;;   ___awdiv->___awmod
   198 ;;
   199 ;; Critical Paths under _main in BANK0
   200 ;;
   201 ;;   _main->_display
   202 ;;
   203 ;; Critical Paths under _main in BANK1
   204 ;;
   205 ;;   None.
   206 ;;
   207 ;; Critical Paths under _main in BANK3
   208 ;;
   209 ;;   None.
   210 ;;
   211 ;; Critical Paths under _main in BANK2
   212 ;;
   213 ;;   None.
   214 ;;
   215 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   216 ;;
   217 ;;
   218 ;;Call Graph Tables:
   219 ;;
   220 ;; ---------------------------------------------------------------------------------
   221 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   222 ;; ---------------------------------------------------------------------------------
   223 ;; (0) _main                                                 4     4      0    1217
   224 ;;                                             12 BANK0      4     4      0
   225 ;;                               _init
   226 ;;                            ___awdiv
   227 ;;                            _display
   228 ;; ---------------------------------------------------------------------------------
   229 ;; (1) _display                                             12    10      2     800
   230 ;;                                              0 BANK0     12    10      2
   231 ;;                            ___awdiv
   232 ;;                            ___awmod
   233 ;;                              _DELAY
   234 ;; ---------------------------------------------------------------------------------
   235 ;; (1) _init                                                 0     0      0      23
   236 ;;                              _DELAY
   237 ;; ---------------------------------------------------------------------------------
   238 ;; (2) ___awmod                                              6     2      4     296
   239 ;;                                              0 COMMON     6     2      4
   240 ;; ---------------------------------------------------------------------------------
   241 ;; (2) ___awdiv                                              8     4      4     300
   242 ;;                                              6 COMMON     8     4      4
   243 ;;                            ___awmod (ARG)
   244 ;; ---------------------------------------------------------------------------------
   245 ;; (2) _DELAY                                                2     2      0      23
   246 ;;                                              0 COMMON     2     2      0
   247 ;; ---------------------------------------------------------------------------------
   248 ;; Estimated maximum stack depth 2
   249 ;; ---------------------------------------------------------------------------------
   250 ;; Call Graph Graphs:
   251 ;; _main (ROOT)
   252 ;;   _init
   253 ;;     _DELAY
   254 ;;   ___awdiv
   255 ;;     ___awmod (ARG)
   256 ;;   _display
   257 ;;     ___awdiv
   258 ;;       ___awmod (ARG)
   259 ;;     ___awmod
   260 ;;     _DELAY
   261 ;;
   262 ;; Address spaces:
   263 ;;Name               Size   Autos  Total    Cost      Usage
   264 ;;BITCOMMON            E      0       0       0        0.0%
   265 ;;EEDATA             100      0       0       0        0.0%
   266 ;;NULL                 0      0       0       0        0.0%
   267 ;;CODE                 0      0       0       0        0.0%
   268 ;;COMMON               E      E       E       1      100.0%
   269 ;;BITSFR0              0      0       0       1        0.0%
   270 ;;SFR0                 0      0       0       1        0.0%
   271 ;;BITSFR1              0      0       0       2        0.0%
   272 ;;SFR1                 0      0       0       2        0.0%
   273 ;;STACK                0      0       2       2        0.0%
   274 ;;ABS                  0      0       0       3        0.0%
   275 ;;BITBANK0            50      0       0       4        0.0%
   276 ;;BITSFR3              0      0       0       4        0.0%
   277 ;;SFR3                 0      0       0       4        0.0%
   278 ;;BANK0               50     10      10       5       20.0%
   279 ;;BITSFR2              0      0       0       5        0.0%
   280 ;;SFR2                 0      0       0       5        0.0%
   281 ;;BITBANK1            50      0       0       6        0.0%
   282 ;;BANK1               50      0       0       7        0.0%
   283 ;;BITBANK3            60      0       0       8        0.0%
   284 ;;BANK3               60      0       0       9        0.0%
   285 ;;BITBANK2            60      0       0      10        0.0%
   286 ;;BANK2               60      0       0      11        0.0%
   287 ;;DATA                 0      0       0      12        0.0%
   288                           
   289                           
   290 ;; *************** function _main *****************
   291 ;; Defined at:
   292 ;;		line 20 in file "D:\PIC16F72\PIC CODE\ADC\main.c"
   293 ;; Parameters:    Size  Location     Type
   294 ;;		None
   295 ;; Auto vars:     Size  Location     Type
   296 ;;  i               2   12[BANK0 ] int 
   297 ;;  result          2   14[BANK0 ] int 
   298 ;; Return value:  Size  Location     Type
   299 ;;		None               void
   300 ;; Registers used:
   301 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   302 ;; Tracked objects:
   303 ;;		On entry : 17F/0
   304 ;;		On exit  : 60/0
   305 ;;		Unchanged: FFE00/0
   306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   307 ;;      Params:         0       0       0       0       0
   308 ;;      Locals:         0       4       0       0       0
   309 ;;      Temps:          0       0       0       0       0
   310 ;;      Totals:         0       4       0       0       0
   311 ;;Total ram usage:        4 bytes
   312 ;; Hardware stack levels required when called:    2
   313 ;; This function calls:
   314 ;;		_init
   315 ;;		___awdiv
   316 ;;		_display
   317 ;; This function is called by:
   318 ;;		Startup code after reset
   319 ;; This function uses a non-reentrant model
   320 ;;
   321  06BC                     _main:	
   322  06BC                     l649:	
   323                           ;main.c: 22: while(1)
   324                           
   325                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   326                           
   327  06BC  3005               	movlw	5
   328                           
   329                           ;main.c: 23: {
   330                           ;main.c: 24: int i;
   331                           ;main.c: 25: result=0x00;
   332  06BD  01AE               	clrf	main@result
   333  06BE  01AF               	clrf	main@result+1
   334                           
   335                           ;main.c: 26: for(i=5;i>0;i--)
   336  06BF  00AC               	movwf	main@i
   337  06C0  01AD               	clrf	main@i+1
   338  06C1                     l2046:	
   339                           
   340                           ;main.c: 27: {
   341                           ;main.c: 28: init();
   342  06C1  120A  118A  26FA   	fcall	_init
      +       120A  118A         
   343                           
   344                           ;main.c: 31: GO_DONE=0x01;
   345  06C6  151F               	bsf	31,2
   346  06C7                     l652:	
   347                           ;main.c: 32: while(GO_DONE);
   348                           
   349  06C7  191F               	btfsc	31,2
   350  06C8  2EC7               	goto	l652
   351                           
   352                           ;main.c: 33: result=result+ADRESL;
   353  06C9  1683               	bsf	3,5	;RP0=1, select bank1
   354  06CA  081E               	movf	30,w	;volatile
   355  06CB  1283               	bcf	3,5	;RP0=0, select bank0
   356  06CC  07AE               	addwf	main@result,f
   357  06CD  1803               	skipnc
   358  06CE  0AAF               	incf	main@result+1,f
   359  06CF  30FF               	movlw	-1
   360  06D0  07AC               	addwf	main@i,f
   361  06D1  1C03               	skipc
   362  06D2  03AD               	decf	main@i+1,f
   363  06D3  082D               	movf	main@i+1,w
   364  06D4  3A80               	xorlw	128
   365  06D5  00FF               	movwf	127
   366  06D6  3080               	movlw	128
   367  06D7  027F               	subwf	127,w
   368  06D8  1D03               	skipz
   369  06D9  2EDC               	goto	u345
   370  06DA  3001               	movlw	1
   371  06DB  022C               	subwf	main@i,w
   372  06DC                     u345:	
   373  06DC  1803               	skipnc
   374  06DD  2EC1               	goto	l2046
   375                           
   376                           ;main.c: 34: }
   377                           ;main.c: 35: result=result/5;
   378  06DE  3005               	movlw	5
   379  06DF  00F6               	movwf	?___awdiv
   380  06E0  01F7               	clrf	?___awdiv+1
   381  06E1  1283               	bcf	3,5	;RP0=0, select bank0
   382  06E2  1303               	bcf	3,6	;RP1=0, select bank0
   383  06E3  082F               	movf	main@result+1,w
   384  06E4  00F9               	movwf	?___awdiv+3
   385  06E5  082E               	movf	main@result,w
   386  06E6  00F8               	movwf	?___awdiv+2
   387  06E7  120A  118A  27B3   	fcall	___awdiv
      +       120A  118A         
   388  06EC  0877               	movf	?___awdiv+1,w
   389  06ED  00AF               	movwf	main@result+1
   390  06EE  0876               	movf	?___awdiv,w
   391  06EF  00AE               	movwf	main@result
   392                           
   393                           ;main.c: 36: display(result);
   394  06F0  082F               	movf	main@result+1,w
   395  06F1  00A1               	movwf	?_display+1
   396  06F2  082E               	movf	main@result,w
   397  06F3  00A0               	movwf	?_display
   398  06F4  120A  118A  2709   	fcall	_display
      +       120A  118A         
   399  06F9  2EBC               	goto	l649
   400  06FA                     __end_of_main:	
   401                           
   402                           	psect	text111
   403  06FA                     __ptext111:	
   404 ;; =============== function _display ends ============
   405                           
   406                           
   407 ;; *************** function _init *****************
   408 ;; Defined at:
   409 ;;		line 42 in file "D:\PIC16F72\PIC CODE\ADC\main.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;		None
   412 ;; Auto vars:     Size  Location     Type
   413 ;;		None
   414 ;; Return value:  Size  Location     Type
   415 ;;		None               void
   416 ;; Registers used:
   417 ;;		wreg, status,2, status,0, pclath, cstack
   418 ;; Tracked objects:
   419 ;;		On entry : 0/0
   420 ;;		On exit  : 60/0
   421 ;;		Unchanged: FFF9F/0
   422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   423 ;;      Params:         0       0       0       0       0
   424 ;;      Locals:         0       0       0       0       0
   425 ;;      Temps:          0       0       0       0       0
   426 ;;      Totals:         0       0       0       0       0
   427 ;;Total ram usage:        0 bytes
   428 ;; Hardware stack levels used:    1
   429 ;; Hardware stack levels required when called:    1
   430 ;; This function calls:
   431 ;;		_DELAY
   432 ;; This function is called by:
   433 ;;		_main
   434 ;; This function uses a non-reentrant model
   435 ;;
   436  06FA                     _init:	
   437                           
   438                           ;main.c: 43: PORTA=0XFF;
   439                           
   440                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
   441  06FA  30FF               	movlw	255
   442  06FB  1283               	bcf	3,5	;RP0=0, select bank0
   443  06FC  1303               	bcf	3,6	;RP1=0, select bank0
   444  06FD  0085               	movwf	5	;volatile
   445                           
   446                           ;main.c: 44: PORTD=0XFF;
   447  06FE  0088               	movwf	8	;volatile
   448                           
   449                           ;main.c: 45: TRISA=0X1;
   450  06FF  3001               	movlw	1
   451  0700  1683               	bsf	3,5	;RP0=1, select bank1
   452  0701  0085               	movwf	5	;volatile
   453                           
   454                           ;main.c: 46: TRISD=0X00;
   455  0702  0188               	clrf	8	;volatile
   456                           
   457                           ;main.c: 47: ADCON1=0X8E;
   458  0703  308E               	movlw	142
   459  0704  009F               	movwf	31	;volatile
   460                           
   461                           ;main.c: 48: ADCON0=0X41;
   462  0705  3041               	movlw	65
   463  0706  1283               	bcf	3,5	;RP0=0, select bank0
   464  0707  009F               	movwf	31	;volatile
   465                           
   466                           ;main.c: 49: DELAY();
   467  0708  2FA6               	ljmp	l1916
   468  0709                     __end_of_init:	
   469  0709                     __ptext110:	
   470 ;; =============== function _main ends ============
   471                           
   472                           
   473 ;; *************** function _display *****************
   474 ;; Defined at:
   475 ;;		line 54 in file "D:\PIC16F72\PIC CODE\ADC\main.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;  x               2    0[BANK0 ] int 
   478 ;; Auto vars:     Size  Location     Type
   479 ;;  temp            2   10[BANK0 ] int 
   480 ;;  ge              2    6[BANK0 ] int 
   481 ;;  shi             2    4[BANK0 ] int 
   482 ;;  bai             2    2[BANK0 ] int 
   483 ;; Return value:  Size  Location     Type
   484 ;;		None               void
   485 ;; Registers used:
   486 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   487 ;; Tracked objects:
   488 ;;		On entry : 60/0
   489 ;;		On exit  : 60/0
   490 ;;		Unchanged: FFF9F/0
   491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   492 ;;      Params:         0       2       0       0       0
   493 ;;      Locals:         0      10       0       0       0
   494 ;;      Temps:          0       0       0       0       0
   495 ;;      Totals:         0      12       0       0       0
   496 ;;Total ram usage:       12 bytes
   497 ;; Hardware stack levels used:    1
   498 ;; Hardware stack levels required when called:    1
   499 ;; This function calls:
   500 ;;		___awdiv
   501 ;;		___awmod
   502 ;;		_DELAY
   503 ;; This function is called by:
   504 ;;		_main
   505 ;; This function uses a non-reentrant model
   506 ;;
   507  0709                     _display:	
   508                           
   509                           ;main.c: 55: int bai,shi,ge,temp;
   510                           ;main.c: 56: temp=x;
   511                           
   512                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   513  0709  0821               	movf	display@x+1,w
   514  070A  00AB               	movwf	display@temp+1
   515  070B  0820               	movf	display@x,w
   516  070C  00AA               	movwf	display@temp
   517                           
   518                           ;main.c: 57: bai=temp/0x64;
   519  070D  3064               	movlw	100
   520  070E  00F6               	movwf	?___awdiv
   521  070F  01F7               	clrf	?___awdiv+1
   522  0710  082B               	movf	display@temp+1,w
   523  0711  00F9               	movwf	?___awdiv+3
   524  0712  082A               	movf	display@temp,w
   525  0713  00F8               	movwf	?___awdiv+2
   526  0714  27B3  120A  118A   	fcall	___awdiv
   527  0717  0877               	movf	?___awdiv+1,w
   528  0718  00A3               	movwf	display@bai+1
   529  0719  0876               	movf	?___awdiv,w
   530  071A  00A2               	movwf	display@bai
   531                           
   532                           ;main.c: 58: shi=(temp%0x64)/0xa;
   533  071B  300A               	movlw	10
   534  071C  00F6               	movwf	?___awdiv
   535  071D  01F7               	clrf	?___awdiv+1
   536  071E  27F8  120A  118A   	fcall	PL2	;call to abstracted procedure
   537  0721  2769  120A  118A   	fcall	___awmod
   538  0724  0871               	movf	?___awmod+1,w
   539  0725  00F9               	movwf	?___awdiv+3
   540  0726  0870               	movf	?___awmod,w
   541  0727  00F8               	movwf	?___awdiv+2
   542  0728  27B3  120A  118A   	fcall	___awdiv
   543  072B  0877               	movf	?___awdiv+1,w
   544  072C  00A5               	movwf	display@shi+1
   545  072D  0876               	movf	?___awdiv,w
   546  072E  00A4               	movwf	display@shi
   547                           
   548                           ;main.c: 59: ge=(temp%0x64)%0xa;
   549  072F  27F8  120A  118A   	fcall	PL2	;call to abstracted procedure
   550  0732  2769  120A  118A   	fcall	___awmod
   551  0735  0871               	movf	?___awmod+1,w
   552  0736  00A9               	movwf	_display$1836+1
   553  0737  0870               	movf	?___awmod,w
   554  0738  00A8               	movwf	_display$1836
   555                           
   556                           ;main.c: 59: ge=(temp%0x64)%0xa;
   557  0739  300A               	movlw	10
   558  073A  00F0               	movwf	?___awmod
   559  073B  01F1               	clrf	?___awmod+1
   560  073C  0829               	movf	_display$1836+1,w
   561  073D  00F3               	movwf	?___awmod+3
   562  073E  0828               	movf	_display$1836,w
   563  073F  00F2               	movwf	?___awmod+2
   564  0740  2769               	fcall	___awmod
   565  0741  0871               	movf	?___awmod+1,w
   566  0742  00A7               	movwf	display@ge+1
   567  0743  0870               	movf	?___awmod,w
   568  0744  00A6               	movwf	display@ge
   569                           
   570                           ;main.c: 60: PORTD=TABLE[bai];
   571  0745  0822               	movf	display@bai,w
   572  0746  3E01               	addlw	low (_TABLE-__stringbase)
   573  0747  0084               	movwf	4
   574  0748  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
   575  074D  0088               	movwf	8	;volatile
   576                           
   577                           ;main.c: 61: PORTA=0x37;
   578  074E  3037               	movlw	55
   579  074F  0085               	movwf	5	;volatile
   580                           
   581                           ;main.c: 62: DELAY();
   582  0750  27A6               	fcall	_DELAY
   583                           
   584                           ;main.c: 63: PORTD=TABLE[shi];
   585  0751  0824               	movf	display@shi,w
   586  0752  3E01               	addlw	low (_TABLE-__stringbase)
   587  0753  0084               	movwf	4
   588  0754  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
   589  0759  0088               	movwf	8	;volatile
   590                           
   591                           ;main.c: 64: PORTA=0x2F;
   592  075A  302F               	movlw	47
   593  075B  0085               	movwf	5	;volatile
   594                           
   595                           ;main.c: 65: DELAY();
   596  075C  27A6               	fcall	_DELAY
   597                           
   598                           ;main.c: 66: PORTD=TABLE[ge];
   599  075D  0826               	movf	display@ge,w
   600  075E  3E01               	addlw	low (_TABLE-__stringbase)
   601  075F  0084               	movwf	4
   602  0760  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
   603  0765  0088               	movwf	8	;volatile
   604                           
   605                           ;main.c: 67: PORTA=0x1F;
   606  0766  301F               	movlw	31
   607  0767  0085               	movwf	5	;volatile
   608                           
   609                           ;main.c: 68: DELAY();
   610  0768  2FA6               	ljmp	l1916
   611  0769                     __end_of_display:	
   612  0769                     __ptext112:	
   613 ;; =============== function _init ends ============
   614                           
   615                           
   616 ;; *************** function ___awmod *****************
   617 ;; Defined at:
   618 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awmod.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;  divisor         2    0[COMMON] int 
   621 ;;  dividend        2    2[COMMON] int 
   622 ;; Auto vars:     Size  Location     Type
   623 ;;  sign            1    5[COMMON] unsigned char 
   624 ;;  counter         1    4[COMMON] unsigned char 
   625 ;; Return value:  Size  Location     Type
   626 ;;                  2    0[COMMON] int 
   627 ;; Registers used:
   628 ;;		wreg, status,2, status,0
   629 ;; Tracked objects:
   630 ;;		On entry : 60/0
   631 ;;		On exit  : 60/0
   632 ;;		Unchanged: FFF9F/0
   633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   634 ;;      Params:         4       0       0       0       0
   635 ;;      Locals:         2       0       0       0       0
   636 ;;      Temps:          0       0       0       0       0
   637 ;;      Totals:         6       0       0       0       0
   638 ;;Total ram usage:        6 bytes
   639 ;; Hardware stack levels used:    1
   640 ;; This function calls:
   641 ;;		Nothing
   642 ;; This function is called by:
   643 ;;		_display
   644 ;; This function uses a non-reentrant model
   645 ;;
   646  0769                     ___awmod:	
   647                           
   648                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   649  0769  01F5               	clrf	___awmod@sign
   650  076A  1FF3               	btfss	___awmod@dividend+1,7
   651  076B  2F73               	goto	l1972
   652  076C  09F2               	comf	___awmod@dividend,f
   653  076D  09F3               	comf	___awmod@dividend+1,f
   654  076E  0AF2               	incf	___awmod@dividend,f
   655  076F  1903               	skipnz
   656  0770  0AF3               	incf	___awmod@dividend+1,f
   657  0771  01F5               	clrf	___awmod@sign
   658  0772  0AF5               	incf	___awmod@sign,f
   659  0773                     l1972:	
   660  0773  1FF1               	btfss	___awmod@divisor+1,7
   661  0774  2F7A               	goto	l1976
   662  0775  09F0               	comf	___awmod@divisor,f
   663  0776  09F1               	comf	___awmod@divisor+1,f
   664  0777  0AF0               	incf	___awmod@divisor,f
   665  0778  1903               	skipnz
   666  0779  0AF1               	incf	___awmod@divisor+1,f
   667  077A                     l1976:	
   668  077A  0871               	movf	___awmod@divisor+1,w
   669  077B  0470               	iorwf	___awmod@divisor,w
   670  077C  1903               	skipnz
   671  077D  2F99               	goto	l1992
   672  077E  01F4               	clrf	___awmod@counter
   673  077F                     L1:	
   674  077F  0AF4               	incf	___awmod@counter,f
   675  0780  1BF1               	btfsc	___awmod@divisor+1,7
   676  0781  2F86               	goto	l1984
   677  0782  1003               	clrc
   678  0783  0DF0               	rlf	___awmod@divisor,f
   679  0784  0DF1               	rlf	___awmod@divisor+1,f
   680  0785  2F7F               	goto	L1
   681  0786                     l1984:	
   682  0786  0871               	movf	___awmod@divisor+1,w
   683  0787  0273               	subwf	___awmod@dividend+1,w
   684  0788  1D03               	skipz
   685  0789  2F8C               	goto	u305
   686  078A  0870               	movf	___awmod@divisor,w
   687  078B  0272               	subwf	___awmod@dividend,w
   688  078C                     u305:	
   689  078C  1C03               	skipc
   690  078D  2F95               	goto	L2
   691  078E  0870               	movf	___awmod@divisor,w
   692  078F  02F2               	subwf	___awmod@dividend,f
   693  0790  0871               	movf	___awmod@divisor+1,w
   694  0791  1C03               	skipc
   695  0792  03F3               	decf	___awmod@dividend+1,f
   696  0793  02F3               	subwf	___awmod@dividend+1,f
   697  0794  1003               	clrc
   698  0795                     L2:	
   699  0795  0CF1               	rrf	___awmod@divisor+1,f
   700  0796  0CF0               	rrf	___awmod@divisor,f
   701  0797  0BF4               	decfsz	___awmod@counter,f
   702  0798  2F86               	goto	l1984
   703  0799                     l1992:	
   704  0799  0875               	movf	___awmod@sign,w
   705  079A  1903               	btfsc	3,2
   706  079B  2FA1               	goto	l1996
   707  079C  09F2               	comf	___awmod@dividend,f
   708  079D  09F3               	comf	___awmod@dividend+1,f
   709  079E  0AF2               	incf	___awmod@dividend,f
   710  079F  1903               	skipnz
   711  07A0  0AF3               	incf	___awmod@dividend+1,f
   712  07A1                     l1996:	
   713  07A1  0873               	movf	___awmod@dividend+1,w
   714  07A2  00F1               	movwf	?___awmod+1
   715  07A3  0872               	movf	___awmod@dividend,w
   716  07A4  00F0               	movwf	?___awmod
   717  07A5  0008               	return
   718  07A6                     __end_of___awmod:	
   719  07A6                     __ptext114:	
   720 ;; =============== function ___awdiv ends ============
   721                           
   722                           
   723 ;; *************** function _DELAY *****************
   724 ;; Defined at:
   725 ;;		line 74 in file "D:\PIC16F72\PIC CODE\ADC\main.c"
   726 ;; Parameters:    Size  Location     Type
   727 ;;		None
   728 ;; Auto vars:     Size  Location     Type
   729 ;;  i               2    0[COMMON] int 
   730 ;; Return value:  Size  Location     Type
   731 ;;		None               void
   732 ;; Registers used:
   733 ;;		wreg, status,2, status,0
   734 ;; Tracked objects:
   735 ;;		On entry : 60/0
   736 ;;		On exit  : 60/0
   737 ;;		Unchanged: FFF9F/0
   738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   739 ;;      Params:         0       0       0       0       0
   740 ;;      Locals:         2       0       0       0       0
   741 ;;      Temps:          0       0       0       0       0
   742 ;;      Totals:         2       0       0       0       0
   743 ;;Total ram usage:        2 bytes
   744 ;; Hardware stack levels used:    1
   745 ;; This function calls:
   746 ;;		Nothing
   747 ;; This function is called by:
   748 ;;		_init
   749 ;;		_display
   750 ;; This function uses a non-reentrant model
   751 ;;
   752  07A6                     _DELAY:	
   753  07A6                     l1916:	
   754                           ; Regs used in _DELAY: [wreg+status,2+status,0]
   755                           
   756                           
   757                           ;main.c: 75: int i;
   758                           ;main.c: 76: for(i=0x100;i--;);
   759  07A6  3001               	movlw	1
   760  07A7  01F0               	clrf	DELAY@i
   761  07A8  00F1               	movwf	DELAY@i+1
   762  07A9                     l1918:	
   763  07A9  30FF               	movlw	-1
   764  07AA  07F0               	addwf	DELAY@i,f
   765  07AB  1C03               	skipc
   766  07AC  03F1               	decf	DELAY@i+1,f
   767  07AD  0A70               	incf	DELAY@i,w
   768  07AE  1903               	skipnz
   769  07AF  0A71               	incf	DELAY@i+1,w
   770  07B0  1903               	btfsc	3,2
   771  07B1  0008               	return
   772  07B2  2FA9               	goto	l1918
   773  07B3                     __end_of_DELAY:	
   774  07B3                     __ptext113:	
   775 ;; =============== function ___awmod ends ============
   776                           
   777                           
   778 ;; *************** function ___awdiv *****************
   779 ;; Defined at:
   780 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awdiv.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;  divisor         2    6[COMMON] int 
   783 ;;  dividend        2    8[COMMON] int 
   784 ;; Auto vars:     Size  Location     Type
   785 ;;  quotient        2   12[COMMON] int 
   786 ;;  sign            1   11[COMMON] unsigned char 
   787 ;;  counter         1   10[COMMON] unsigned char 
   788 ;; Return value:  Size  Location     Type
   789 ;;                  2    6[COMMON] int 
   790 ;; Registers used:
   791 ;;		wreg, status,2, status,0
   792 ;; Tracked objects:
   793 ;;		On entry : 60/0
   794 ;;		On exit  : 60/0
   795 ;;		Unchanged: FFF9F/0
   796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   797 ;;      Params:         4       0       0       0       0
   798 ;;      Locals:         4       0       0       0       0
   799 ;;      Temps:          0       0       0       0       0
   800 ;;      Totals:         8       0       0       0       0
   801 ;;Total ram usage:        8 bytes
   802 ;; Hardware stack levels used:    1
   803 ;; This function calls:
   804 ;;		Nothing
   805 ;; This function is called by:
   806 ;;		_main
   807 ;;		_display
   808 ;; This function uses a non-reentrant model
   809 ;;
   810  07B3                     ___awdiv:	
   811                           
   812                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   813  07B3  01FB               	clrf	___awdiv@sign
   814  07B4  1FF7               	btfss	___awdiv@divisor+1,7
   815  07B5  2FBD               	goto	l1928
   816  07B6  09F6               	comf	___awdiv@divisor,f
   817  07B7  09F7               	comf	___awdiv@divisor+1,f
   818  07B8  0AF6               	incf	___awdiv@divisor,f
   819  07B9  1903               	skipnz
   820  07BA  0AF7               	incf	___awdiv@divisor+1,f
   821  07BB  01FB               	clrf	___awdiv@sign
   822  07BC  0AFB               	incf	___awdiv@sign,f
   823  07BD                     l1928:	
   824  07BD  1FF9               	btfss	___awdiv@dividend+1,7
   825  07BE  2FC6               	goto	l1934
   826  07BF  09F8               	comf	___awdiv@dividend,f
   827  07C0  09F9               	comf	___awdiv@dividend+1,f
   828  07C1  0AF8               	incf	___awdiv@dividend,f
   829  07C2  1903               	skipnz
   830  07C3  0AF9               	incf	___awdiv@dividend+1,f
   831  07C4  3001               	movlw	1
   832  07C5  06FB               	xorwf	___awdiv@sign,f
   833  07C6                     l1934:	
   834  07C6  01FC               	clrf	___awdiv@quotient
   835  07C7  01FD               	clrf	___awdiv@quotient+1
   836  07C8  0877               	movf	___awdiv@divisor+1,w
   837  07C9  0476               	iorwf	___awdiv@divisor,w
   838  07CA  1903               	skipnz
   839  07CB  2FEB               	goto	l1956
   840  07CC  01FA               	clrf	___awdiv@counter
   841  07CD                     L3:	
   842  07CD  0AFA               	incf	___awdiv@counter,f
   843  07CE  1BF7               	btfsc	___awdiv@divisor+1,7
   844  07CF  2FD4               	goto	l1944
   845  07D0  1003               	clrc
   846  07D1  0DF6               	rlf	___awdiv@divisor,f
   847  07D2  0DF7               	rlf	___awdiv@divisor+1,f
   848  07D3  2FCD               	goto	L3
   849  07D4                     l1944:	
   850  07D4  1003               	clrc
   851  07D5  0DFC               	rlf	___awdiv@quotient,f
   852  07D6  0DFD               	rlf	___awdiv@quotient+1,f
   853  07D7  0877               	movf	___awdiv@divisor+1,w
   854  07D8  0279               	subwf	___awdiv@dividend+1,w
   855  07D9  1D03               	skipz
   856  07DA  2FDD               	goto	u235
   857  07DB  0876               	movf	___awdiv@divisor,w
   858  07DC  0278               	subwf	___awdiv@dividend,w
   859  07DD                     u235:	
   860  07DD  1C03               	skipc
   861  07DE  2FE7               	goto	L4
   862  07DF  0876               	movf	___awdiv@divisor,w
   863  07E0  02F8               	subwf	___awdiv@dividend,f
   864  07E1  0877               	movf	___awdiv@divisor+1,w
   865  07E2  1C03               	skipc
   866  07E3  03F9               	decf	___awdiv@dividend+1,f
   867  07E4  02F9               	subwf	___awdiv@dividend+1,f
   868  07E5  147C               	bsf	___awdiv@quotient,0
   869  07E6  1003               	clrc
   870  07E7                     L4:	
   871  07E7  0CF7               	rrf	___awdiv@divisor+1,f
   872  07E8  0CF6               	rrf	___awdiv@divisor,f
   873  07E9  0BFA               	decfsz	___awdiv@counter,f
   874  07EA  2FD4               	goto	l1944
   875  07EB                     l1956:	
   876  07EB  087B               	movf	___awdiv@sign,w
   877  07EC  1903               	btfsc	3,2
   878  07ED  2FF3               	goto	l1960
   879  07EE  09FC               	comf	___awdiv@quotient,f
   880  07EF  09FD               	comf	___awdiv@quotient+1,f
   881  07F0  0AFC               	incf	___awdiv@quotient,f
   882  07F1  1903               	skipnz
   883  07F2  0AFD               	incf	___awdiv@quotient+1,f
   884  07F3                     l1960:	
   885  07F3  087D               	movf	___awdiv@quotient+1,w
   886  07F4  00F7               	movwf	?___awdiv+1
   887  07F5  087C               	movf	___awdiv@quotient,w
   888  07F6  00F6               	movwf	?___awdiv
   889  07F7  0008               	return
   890  07F8                     __end_of___awdiv:	
   891  07F8                     PL2:	
   892  07F8  082B               	movf	display@temp+1,w
   893  07F9  00F3               	movwf	?___awmod+3
   894  07FA  082A               	movf	display@temp,w
   895  07FB  00F2               	movwf	?___awmod+2
   896  07FC  3064               	movlw	100
   897  07FD  00F0               	movwf	?___awmod
   898  07FE  01F1               	clrf	?___awmod+1
   899  07FF  0008               	return
   900                           
   901                           	psect	text115
   902  0000                     __ptext115:	
   903 ;; =============== function _DELAY ends ============
   904                           
   905  007E                     btemp	set	126	;btemp
   906  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Mon Aug 03 09:12:34 2015

                   pc 0002          ___awdiv@sign 007B                    fsr 0004                   l660 0000  
                 l652 06C7                   l663 0000                   l649 06BC                   l669 0000  
                 u305 078C                   u235 07DD                   u345 06DC                   fsr0 0004  
        ___awmod@sign 0075                  l2000 0000                  l2002 0000                  l2010 0000  
                l2004 0000                  l2020 0000                  l2012 0000                  l2006 0000  
                l2030 0000                  l2022 0000                  l2014 0000                  l2008 0000  
                l2032 0000                  l2024 0000                  l2016 0000                  l2040 0000  
                l2034 0000                  l2026 0000                  l2018 0000                  l2036 0000  
                l2028 0000                  l2052 0000                  l2054 0000                  l2046 06C1  
                l2038 0000                  l2048 0000                  l1530 0000                  l2058 0000  
                l1462 0000                  l1920 0000                  l1922 0000                  l1916 07A6  
                l1932 0000                  l1918 07A9                  l1950 0000                  l1934 07C6  
                l1926 0000                  l1960 07F3                  l1944 07D4                  l1936 0000  
                l1928 07BD                  l1954 0000                  l1946 0000                  l1970 0000  
                l1956 07EB                  l1972 0773                  l1964 0000                  l1958 0000  
                l1990 0000                  l1966 0000                  l1984 0786                  l1992 0799  
                l1976 077A                  l1994 0000                  l1996 07A1           display@temp 002A  
                _main 06BC                  _init 06FA                  btemp 007E                  start 0000  
               ?_main 0070                 ?_init 0070       __end_of___awdiv 07F8       __end_of___awmod 07A6  
               _DELAY 07A6       ___awdiv@divisor 0076                 _TABLE 0009       ___awdiv@counter 007A  
               _PORTA 0005                 _PORTD 0008                 _TRISA 0085                 _TRISD 0088  
     __end_of_display 0769                 main@i 002C                 pclath 000A                 status 0003  
               wtemp0 007E          __end_of_main 06FA          __end_of_init 0709                DELAY@i 0070  
              ??_main 007E                ??_init 0072                ?_DELAY 0070                _ADCON0 001F  
              _ADCON1 009F                _ADRESL 009E      ___awdiv@dividend 0078             ??___awdiv 007A  
           ??___awmod 0074      ___awdiv@quotient 007C       ___awmod@divisor 0070       ___awmod@counter 0074  
           ??_display 007E         __end_of_DELAY 07B3        __pcstackCOMMON 0070               ??_DELAY 0070  
          __pmaintext 06BC               _GO_DONE 00FA               ___awdiv 07B3               ___awmod 0769  
             _display 0709      ___awmod@dividend 0072  end_of_initialization 06B8          _display$1836 0028  
          display@bai 0022            display@shi 0024            main@result 002E   start_initialization 06B8  
       __pcstackBANK0 0020              ?___awdiv 0076             __ptext110 0709             __ptext111 06FA  
           __ptext112 0769             __ptext113 07B3             __ptext114 07A6             __ptext115 0000  
            ?___awmod 0070             __pstrings 0003              ?_display 0020        __size_of_DELAY 000D  
         __stringbase 0008             display@ge 0026      __size_of___awdiv 0045      __size_of___awmod 003D  
    __size_of_display 0060         __size_of_main 003E         __size_of_init 000F              display@x 0020  
           stringcode 0003              stringdir 0003              stringtab 0003  
